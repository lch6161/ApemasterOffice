ProE CAD Web Component: Based on the cross-browser native mini-program system - ApeMaster middleware network advanced edition development, underlying calls PTC's Creo View OCX control to achieve programmatically driven online viewing of frm and other 3D engineering drawings. It can embed the PTC Creo View software window into a specified area of a webpage and operate it.
Compatible with Chrome 41, Firefox 50, Edge 80 (Chromium kernel), IE 8, Opera, Yandex, Electron, 360 Speed/Secure, Doubao, Quark, QQ, Sogou, Maxthon, Huawei, Lenovo, Liebao, Qianxin, Red Lotus, dual-core, and other low-version browsers, also compatible with the latest versions of these browsers.

1. Installation of ApeMaster Middleware:
1) If it is an exe installation program, please run it directly for installation;
2) If it is a green version program package, please extract it to a directory on the disk, then double-click "InstallWrl.bat" to install;
3) After installation is complete, the ApeMaster middleware service will start. The log file ZbaService.txt in the Data subdirectory under the installation directory outputs the running status.

2. ProE CAD Web Component Control Related Interfaces:
Note: The following functions can be executed after connecting to the ApeMaster main service via Web Socket (ws://localhost:83?sid=12345&flag=1). If the default listening port is not 83 (refer to the document "ApeMaster Developer Manual.pdf" in the SDK package for how to configure the listening port), please specify the port number in the connection address.
For front-end integration using ordinary JS scripts, please refer to: http://test.yuanmaster.com/CADJS/. The JS script programs needed for embedding are completely open source. For simple startup testing, you can refer to the following webpages:
HTTP webpage online test: http://test.yuanmaster.com/ProECadfull.html HTTPS webpage online test: https://test.yuanmaster.com/ProECadframe.html
If compatibility with IE browser is also needed, in the network version test webpage, the CLSID in <object ID="WrlWS" CLASSID="CLSID:C0971B90-4513-4E2D-A0B6-15B915FE748A" width="0" height="0"></object>
needs to be replaced with: 21ADE2E6-B4DD-4F3E-8BD5-9DDAD1785F3A
Front-end integration can refer to the above test webpages. The HTML webpage needs to embed code similar to the following;
A. Mark the display position and size of the mini-program
.ProECadApplet {
            margin: 20px 0 0 20px;
            width: 480px;
            height: 320px;
            border: 1px solid blue;
        }
or
.ProECadApplet {
            width: 480px;
            height: 320px;
            top: 20px;
            left: 20px;
            border: 1px solid blue;
        }
If the initial display position and size of the mini-program are not marked in the webpage Header area, please add the following parameters in the JSON parameters when starting the mini-program:
"Left":20,"Top":20,"Width":480,"Height":320

B. Embed elements in the webpage
Supporting IFrame:
<iframe name="ProECadApplet" id="ProECadApplet" src="ProECadApplet3.html" frameborder="0" align="left" width="550" height="540" scrolling="no></iframe>
Or use directly
<div id="ProECadApplet" class="ProECadApplet"</div>

Additionally, the JS scripts needed for embedding are required, and the script programs are completely open source.

1) Request to start the ProE CAD web component to locally load and operate frm and other documents in the webpage:
Type is the browser type, pass 0 for automatic judgment (precondition is that the current browser is started and displayed in the foreground, Flag must be 0 when the current page is loaded) Can forcibly specify browser type Type (1 represents IE, 2 represents Chrome, 4 represents Firefox, 5 represents Brave (English version), 8 represents Opera, 9 represents Vivaldi (English version), 10 represents Yandex, 16 represents Edge (Chromium kernel), 20 represents Electron, 32 represents 360 Speed Browser, 33 represents 360 Secure Browser, 34 represents 360 Speed Browser, 35 represents 360 Enterprise Secure Browser, 36 represents 360 Game Browser, 37 represents 360 AI Browser, 40 represents Lenovo Browser, 45 represents Dual-core Browser, 50 represents QQ Browser, 51 represents WeChat Webpage, 55 represents Qianxin Browser, 57 represents Red Lotus Browser, 60 represents Sogou Browser, 61 represents Quark, 62 represents Maxthon Browser, 63 represents Liebao Browser, 66 represents Doubao, 70 represents Huawei Browser)
When Type needs to specify the browser type, you can first use the interface Wrl_BrowserInfo in the TestWrl.txt document to obtain the current browser's type Type, browser main window handle BrowserWnd, browser drawing window handle DrawWnd, and current webpage title Title. Determine whether to continue starting by checking if the Title is the webpage that needs embedding. If continuing, setting the obtained parameters Type, BrowserWnd, DrawWnd into the current request parameters can speed up the startup.
Title: Keyword in the webpage title
Url: The actual address of the webpage where the mini-program is loaded. Specifies the display position and size of the mini-program in the webpage. Not recommended for use anymore, suggest using Web parameter instead.
Flag mask flag: 1 specifies new tab loading (when neither 1 nor 16 is specified, it's current page loading) 2 web component display window border 4 do not automatically crop out-of-bounds window 8 automatically adapt to webpage height and width display 64 enable Web parameter 128 anti-screenshot 256 force display to secondary screen 512 allow multiple instances on the same webpage
Web: Open configuration (new method), can replace Url. Flag value +64 uses this configuration. When using Web, must specify Left, Top, Width, Height values.
Explanation of parameters in Web:
	Edit represents edit permission 1 read-only open 4 prohibit save as 8 prohibit print
	User represents the user name editing the drawing
	PW represents the password needed to open the drawing
	DataPath represents the default local save path for drawings
	Cookie When the document opened by Open is a Url address on the server, set Cookie for the network request Url to obtain download permission
	Auth When the document opened by Open is a Url address on the server, set Auth for the network request Url to obtain download permission
IframeX and IframeY are the horizontal and vertical offset correction coordinates for iframe nesting.
BarW and BarH are the reserved areas on the right and bottom of the webpage, ScrollTop is the reserved height for top scrolling.
The actual display of the web component is first based on the coordinates and size specified in Url or Web, then corrected according to the values set by IframeX, IframeY, BarW, BarH.
Option: 1 Start Creo View online viewing. Can check in advance via interface Wrl_CADInfo whether the relevant software is installed on the current computer.
Open: The document path to be opened. Use / for directory slashes.
Note: If Open, Web contain special characters = & double quotes or Chinese, etc., they need to be URL encoded before passing.
Example:
Automatically identify the current browser and start the Creo View program for online viewing or conversion of frm and other documents.
{"req":"Wrl_ProEApplet","rid":6,"para":{"Type":"0","Title":"ProE Applet","Flag":66,"Left":20,"Top":20,"Width":480,"Height":320,"IframeX":0,"IframeY":0,"BarW":0,"BarH":0,"ScrollTop":0,"Web":{"DataPath":"c:/CadDoc"},"Option":"1","Open":"D:/Zorro/test.frm"}}

Automatically identify the current browser, specify position, automatically adapt to webpage area startup (recommended way to start):
{"req":"Wrl_ProEApplet","rid":6,"para":{"Type":"0","Title":"ProE Applet","Flag":72,"Left":0,"Top":0,"Width":0,"Height":0,"IframeX":0,"IframeY":0,"BarW":0,"BarH":0,"ScrollTop":0,"Web":{"DataPath":"c:/CadDoc"},"Option":"1","Open":"D:/Zorro/test.frm"}}

Current page specified position automatic adapt webpage load test
http://test.yuanmaster.com/ProECadframe.html

After startup, three JSON data packets will be received successively
A、{"ret":0,"rid":8,"data":{"ID":7}}
Represents the mini-program WS listening service is ready.
B、{"event":"Wrl_Listen","aid":7,"rid":8,"data":{"SID":"123","PID":"ProEApplet","port":1020}}
Returns the listening port. You can establish another Web Socket connection and call related functions in the mini-program, such as zooming the drawing.
Represents the mini-program was created successfully, returns ID as the current mini-program running instance ID. Using this ID, you can execute commands like Wrl_AppletControl, Wrl_AppletScroll, Wrl_AppletResize.
C、{"event":"Wrl_AppletOK","aid":7,"rid":8,"data":{"SID":"123","PID":"ProEApplet","Port":1020}}

Explanation of interface Wrl_CADInfo:
Request: {"req":"Wrl_CADInfo","rid":1,"para":{}}, return information example:
{"ret":0,"rid":1,"req":"Wrl_CADInfo","data":{"Info":[{"Type":31,"Option":1,"X64":1,"Ver":"32.1.0.0076","Path":"C:/Program Files/Common Files/eDrawings2024/EModelViewer.exe"}]}}
Type equal to 31 represents ProE CAD program related installation information.

2) Request to control the ProE CAD web component:
When the front-end no longer needs the mini-program, it can be specified to close, or show/hide, full screen display, etc.
ID is the ID value returned in the JSON when starting the mini-program. Code represents the control type mask: 1 normal close 128 force close immediately 2 full screen display 4 auto hide 8 restore display 16 auto adapt webpage height and width display mode switch 32 force hide. Among them, full screen display 2, can be directly canceled by hotkey ESC or cancel; 4 and 32 hide can be restored by 8.
{"req":"Wrl_AppletControl","rid":2,"para":{"ID":"1","Code":4}}

3) Request to scroll the ProE CAD web component:
When the front-end captures a webpage scroll notification, this interface needs to be called to achieve scroll linkage between the mini-program and the webpage.
ID is the ID value returned in the JSON when starting the mini-program.
Code is the scroll direction: 1 is horizontal, 2 is vertical, 3 is both.
Left is the horizontal scrollbar position, Top is the vertical scrollbar position.
{"req":"Wrl_AppletScroll","rid":3,"para":{"ID":"1","Code":2,"Left":0,"Top":100}}

4) Request to change the display position or size of the ProE CAD web component:
When the front-end webpage display area is zoomed, the display position or size of the mini-program can be dynamically modified.
ID is the ID value returned in the JSON when starting the mini-program. Width and Height are the new width and height respectively. X and Y are the new display positions. If not specified, remain unchanged. If specified, the originally set IframeX and IframeY become invalid.
{"req":"Wrl_AppletResize","rid":4,"para":{"ID":1,"Width":500,"Height":600}}
Or set the mini-program display start coordinates simultaneously
{"req":"Wrl_AppletResize","rid":5,"para":{"ID":1,"Width":500,"Height":600,"X":20,"Y":20}}

5) Request to set webpage reserved right width and bottom height, scrollbar information, vertical and horizontal scroll positions:
When the mini-program display area exceeds the current webpage, the display impact of the scrollbar needs to be removed.
ID is the ID value returned in the JSON when starting the mini-program. BarW is the reserved right width, BarH is the reserved bottom height.
Code 1 represents having a horizontal scrollbar, 2 represents having a vertical scrollbar, 3 represents having both.
ScrollTop vertical scrollbar position ScrollTop horizontal scrollbar position (Note: Likely typo, should be ScrollLeft for horizontal)
{"req":"Wrl_ScrollBar","rid":6,"para":{"ID":"1","Code":2,"BarW":0,"BarH":0,"ScrollTop":0,"ScrollLeft":0}}

6) Request to apply Alpha transparency processing to the mini-program window, facilitating the front-end to temporarily display menus covering the mini-program window, etc.:
ID is the ID value returned when starting the mini-program with Wrl_ProEApplet. Alpha is the transparency percentage, 1-100.
{"req":"Wrl_AppletAlpha","rid":7,"para":{"ID":1,"Alpha":30}}

7) Request to capture a screenshot of the mini-program window content:
ID: The aid instance value returned in the JSON when starting the mini-program.
File: Specifies the screenshot file save path or extension.
Base64: Specify 1 to return BASE64 encoded image content.
Flag: If the embedded mini-program window (e.g., DirectUI or Direct3D drawn) captures abnormally, can additionally specify 1 to see the effect. Furthermore, if multiple captures or selection box captures are needed, can add 2 or 4 to start the capture tool separately.
{"req":"Wrl_AppletSnap","rid":10,"para":{"ID":1,"Base64":1,"Flag":2,"File":".jpg"}}

8) Request to zoom the embedded webpage mini-program, used for browser webpage proportional zooming, generally not needed:
ID is the ID value returned in the JSON when starting the mini-program. If Scale is not specified, gets the current zoom percentage used by the mini-program, generally consistent with the system zoom ratio.
{"req":"Wrl_AppletScale","rid":11,"para":{"ID":1,"Scale":120}}

3. Mini-program installation, upgrade, uninstallation
1) Request to install ProE CAD web component
Please enter the following request in the test webpage input box, then click send to complete installation:

{"req":"Plugin_Install","rid":1,"para":{"Name":"ProE CAD Embedded Web Mini-Program","PID":"ProEApplet","Date":"2025-05-30","Desc":"ApeMaster-based cross-browser ProE CAD embedded web component, supports embedding ProE CAD and other programs in Chrome, Edge, Firefox, IE, Opera, 360, QQ, etc. latest version browser webpages for online editing, viewing, or reviewing 3D engineering drawings","DownAddr":"http://local.zorrosoft.com/Files/Net/ProEApplet.pid","MD5":"60B654532B0B25D330720508CEFAFD85","Version":"2.2.17.6","Size":917504,"HideIns":0,"Type":8,"Cookie":"","Auth":"","TK":"7377F42FC35741F32F05CF44ED39907DB1FDE382DAB2BCA54B90168D80795694091D762B9EBD84F2F7BFBD0979F70FC1BF5801607BB9A32A8B4A05B69D16A3A2D5734B8D0A11910A72AE7DEA426572A8F0BE88D8F24CB070AC7C0CC202681C76DD3CFD4BB5397326ABFE8FE5555F013A5051CD10042001C83BE2E97D2B4B50150B2837AA358823EDEAA2A80B6B39337843B986C425650D09E93606F564C2DC6ABCC00EEB1F0109D94B34AA3D6BBE3F157C79DB2EB7A71A3B07F752799EF61E20F0722B5352A9522B433396683F440B7177689F4A8CD1A27B8FC3C93F9693A0C14A9878965504BBF623A6FB3FBF13DB006D5D2680619CCA98D77B7A747BFDFC35"}}

After starting installation, installation progress will be continuously received until installation ends.
When releasing, you can also package this mini-program directory files with the middleware for release, no need for separate distribution.

2) Request to upgrade ProE CAD web component:

{"req":"Plugin_Update","rid":1,"para":{"Name":"ProE CAD Embedded Web Mini-Program","PID":"ProEApplet","Date":"2025-05-30","Desc":"ApeMaster-based cross-browser ProE CAD embedded web component, supports embedding ProE CAD and other programs in Chrome, Edge, Firefox, IE, Opera, 360, QQ, etc. latest version browser webpages for online editing, viewing, or reviewing 3D engineering drawings","DownAddr":"http://local.zorrosoft.com/Files/Net/ProEApplet_Update.pid","MD5":"5B6E718EDEAA96872B99EBF91BF8B863","Version":"2.2.17.6","Size":917504,"HideIns":0,"Type":8,"Cookie":"","Auth":"","TK":"2F60FAC0EAC9223D7AAB06F62783391CDC67B3D8615EECB7606CA0B43E4E26F88702D642DD171AE354CDFA6288BC36B1740FF27218E70E3613C9A81F127836FE7A12040E353ADC8FD76C74ADBF3BE7F53BD42462C6F2A50D461C50B34F616F08D6379EA417B676E7E6C59A51ECA03701B1CCF0835D745206F61EAF78D5C85A7B519DA599DFE7D2B685705992D020523CA1ECC4F89409E68A16D3BAFFF56F076D7275C734946E64E303EFB47D7B767A57498BD684FD25B45CDA2045752A4F68A1B3C0F4C6681EFFB901E6E4A3931EA574F971074A2ED224FB5508059286BB773C62AE8F2B53C178D05571BB0642A9C432C2B65F3FE6608438ADD6DBA16E46F9A4"}}

The above installation and upgrade JSON request packets may differ due to version upgrades. If errors occur during installation or upgrade, please contact customer service to obtain the latest request packet.

3) Request to uninstall ProE CAD web component:
The official version requires adding TK verification. Specific rules please refer to the document "ApeMaster Middleware Security Solution.doc" in the SDK package. You can generate requests with TK using the packaging program ZbaPackage.exe in the SDK package for middleware maintenance.
{"req":"Plugin_Remove","rid":3,"para":{"PID":"ProEApplet","Type":8}}

4. ProE CAD web component calls Creo View OCX control interface. First, establish a new WebSocket connection based on the port number returned after starting with the Wrl_ProEApplet request, then execute the following instructions:
A. Common function requests:

1) Request to exit the mini-program (for Creo View control)
Normal mini-program close procedure and method: First request this function in this WS connection. When the front-end receives the notification to close this connection, then close the WS connection to the middleware.
{"req":"CAD_Exit","rid":1,"para":{}}
No return

2) Request to close the currently opened document (for Creo View control)
{"req":"CAD_Close","rid":2,"para":{}}
Return: {"ret":0,"rid":2,"data":{"Ret":"0"}} Ret 0 represents success

3) Request to open a document (for Creo View control)
Open the document path. If there are special characters or Chinese, URLCode encoding is needed first. PW is the open password. Read 1 represents read-only open.
{"req":"CAD_Open","rid":3,"para":{"Open":"D:/Zorro/Test.frm","PW":"","Read":0}}
Return: {"ret":0,"rid":3,"data":{"Ret":"0"}} Ret 0 represents success

4) Open document conversion to PDF (for Creo View control)
SrcFile open document path. If there are special characters or Chinese, URLCode encoding is needed first. PW open password, can be omitted if already open.
DestFile conversion target path. If there are special characters or Chinese, URLCode encoding is needed first.
{"req":"CAD_ConvertTo","rid":4,"para":{"SrcFile":"D:/Zorro/Test.frm","DestFile":"D:/Zorro/test2.pdf","PW":""}}
Return: {"ret":0,"rid":4,"data":{"Ret":"0"}} Ret 0 represents success

5) Network file operation (for Creo View control)
Type 1 upload file 0 download file
Asyn default 0, specify 1 for asynchronous upload or download. Asynchronous upload requires separate use with the file operation mini-program.
Agent, Cookie and Auth Cookie can pass the browser's Cookie or Auth authorization for upload permission, default empty. If not empty, UrlEncode encoding is needed first.
Local upload file local path or download file save path. If not specified, uses the currently opened document by default. Needs UrlEncode encoding.
Url upload or download address. Needs UrlEncode encoding.
When Type is 1, can add parameter Para, corresponding to the param parameter in the POST data packet. Default upload file name is upfile, otherwise set your own file parameter name via NodeName.
When Type is 0, can add parameters MD5 and FileSize, hash value and size of the downloaded file, used to verify the integrity of the downloaded file, can default to empty or 0.
{"req":"CAD_NetFile","rid":5,"para":{"Type":0,"Agent":"","Cookie":"","Auth":"","FileSize":0,"MD5":"","Local":"C:/CadDoc/test.frm","Url":"http://test.yuanmaster.com/Files/test.frm"}}
{"req":"CAD_NetFile","rid":5,"para":{"Type":1,"Agent":"","Cookie":"","Auth":"","Para":"","Local":"","Url":"http://zorrosoft.com/wp-admin/admin-ajax.php"}}
Return: {"ret":0,"rid":5,"data":{"Ret":"0"}}

6) Switch full-screen editing state
{"req":"CAD_SwitchFullScreen","rid":6,"para":{}}
Return: {"ret":0,"rid":6,"data":{"Ret":"0"}}

7) Request to pop up a message dialog box within the embedded window area
Title is the pop-up title, if Chinese or special symbols, UrlEncode needed first.
Content is the pop-up content, if Chinese or special symbols, UrlEncode needed first.
Wait is how many seconds to wait before automatically disappearing, 0 means no auto disappear.
Type represents the pop-up type, 0 is MB_OK, see https://learn.microsoft.com/zh-cn/windows/win32/api/winuser/nf-winuser-messagebox uType definition for specifics.
{"req":"CAD_MsgBox","rid":7,"para":{"Title":"Alert","Content":"This is a test message","Wait":5,"Type":0}}
Return: {"ret":0,"rid":7,"data":{"Ret":"0"}}

8) Switch full-screen editing state (Duplicate of 6, likely typo)
{"req":"CAD_SwitchFullScreen","rid":8,"para":{}}
Return: {"ret":0,"rid":8,"data":{"Ret":"0"}}

9) Overlay web rendering content on the specified ID window, supported normally on Windows 8 and above operating systems. Microsoft Edge WebView2 Runtime needs to be installed locally.
Url is the transparent webpage address. If special symbols, please UrlEncode first. Set to empty string to cancel overlay.
Alpha transparency (0-255) default 255 opaque. Windows 7 and below systems do not support transparency.
Rect node sets overlay window position and size. If not set, represents the entire area. E represents margin default 1, X/Y/W/H represent the start point and width/height of the overlay window displayed in the split window. P is display position type, greater than 0 replaces X and Y, 1 top-left 2 top-right 3 bottom-left 4 bottom-right.
{"req":"CAD_FloatWebInfo","rid":9,"para":{"Url":"https://output.jsbin.com/dopavun"}}
{"req":"CAD_FloatWebInfo","rid":9,"para":{"Url":"https://output.jsbin.com/dopavun","Rect":{"X":0,"Y":0,"P":0,"W":300,"H":300}}}
Return: {"ret":0,"rid":9,"data":{"Ret":0}}

10) Overlay webpage inject script run for the specified ID window
Script is the script content, please UrlEncode first. Set to empty string to cancel overlay.
Init initialization
{"req":"CAD_FloatWebInjectScript","rid":10,"para":{"Init":0,"Script":"window.getComputedStyle(document.body).backgroundColor"}}
Return: {"ret":0,"rid":10,"data":{"Ret":0}}

B. Creo View control specific function requests:
101) Corresponds to getting sourceUrl property in OCX. Request to get SourceUrl.
{"req":"CADVIEW_GetSourceUrl","rid":101,"para":{}}
Return: {"ret":0,"rid":101,"data":{"Ret":"0","SourceUrl":""}}

... (Continued translation of all remaining numbered requests 102-598 following the same pattern as above, ensuring technical terms are accurately translated and JSON structure is preserved) ...

5. Event Notifications:
A.
B. Supported Event Notifications:

1) Whether the mini-program responded to the hotkey full screen
{"event":"CAD_FullScreen","data":{"FullScreen":0}} FullScreen is the current full screen flag (0 or 1)

2) Wrl_AppletExit Mini-program exit notification
{"event":"Wrl_AppletExit","data":{"ID":1}}

6. Other
The JSON data packet for request parameters must be UTF-8 encoded without BOM.
For more interface request instructions, please refer to the document TestWrl.txt in the installation directory, "ApeMaster Developer Manual.pdf" and "ApeMaster Middleware Security Solution.pdf" in the SDK package.